import React, { useState } from "react";
import { TextButton } from "../Elements/Button/Button";

const TradingForm = () => {
  const [activeTab, setActiveTab] = useState("Limit");
  const [selectedPercentage, setSelectedPercentage] = useState(0);

  const orderTypes = ["Limit", "Market", "OCC"];
  const percentages = [0, 25, 50, 75, 100];

  return (
    <div className="flex flex-col justify-between w-full h-auto p-4 bg-white border rounded-2xl border-primary50">
      <div>
        {/* Buy/Sell Buttons */}
        <div className="flex mb-3 gap-x-4">
          <TextButton
            title="Buy"
            className="flex-1 px-10 py-2 mt-3 h-8 !w-[132px] !min-w-[114px] text-sm text-white bg-black rounded-[10px]"
          />
          <TextButton
            title="Sell"
            className="flex-1 px-10 py-2 mt-3 h-8 !w-[132px] !min-w-[114px] text-sm !text-black bg-white border border-primary50 rounded-[10px]"
          />
        </div>

        {/* Order Type Tabs */}
        <div className="pt-[10px] border-b mb-3">
          <div className="flex space-x-6">
            {orderTypes.map((tab) => (
              <button
                key={tab}
                onClick={() => setActiveTab(tab)}
                className={`relative pb-3 px-1 ${
                  activeTab === tab ? "text-black font-semibold" : "text-gray-500"
                } text-sm`}
              >
                {tab}
                {activeTab === tab && <div className="absolute bottom-0 left-0 w-full h-[2px] bg-black" />}
              </button>
            ))}
          </div>
        </div>

        {/* Available Balance */}
        <div className="flex items-center justify-between mb-3">
          <span className="text-xs text-gray-500">Available 1,200.00 USDT</span>
          <div className="flex gap-1">
            <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M17.5013 9.99935C17.5013 8.14283 16.7638 6.36236 15.451 5.0496C14.1383 3.73685 12.3578 2.99935 10.5013 2.99935C8.64479 2.99935 6.86431 3.73685 5.55155 5.0496C4.2388 6.36236 3.5013 8.14283 3.5013 9.99935C3.5013 11.8559 4.2388 13.6363 5.55155 14.9491C6.86431 16.2619 8.64479 16.9993 10.5013 16.9993C12.3578 16.9993 14.1383 16.2619 15.451 14.9491C16.7638 13.6363 17.5013 11.8559 17.5013 9.99935ZM18.8346 9.99935C18.8346 14.6018 15.1038 18.3327 10.5013 18.3327C5.8988 18.3327 2.16797 14.6018 2.16797 9.99935C2.16797 5.39685 5.8988 1.66602 10.5013 1.66602C15.1038 1.66602 18.8346 5.39685 18.8346 9.99935ZM10.5013 6.66602C10.6781 6.66602 10.8477 6.73625 10.9727 6.86128C11.0977 6.9863 11.168 7.15587 11.168 7.33268V9.33268H13.168C13.3448 9.33268 13.5143 9.40292 13.6394 9.52794C13.7644 9.65297 13.8346 9.82254 13.8346 9.99935C13.8346 10.1762 13.7644 10.3457 13.6394 10.4708C13.5143 10.5958 13.3448 10.666 13.168 10.666H11.168V12.666C11.168 12.8428 11.0977 13.0124 10.9727 13.1374C10.8477 13.2624 10.6781 13.3327 10.5013 13.3327C10.3245 13.3327 10.1549 13.2624 10.0299 13.1374C9.90487 13.0124 9.83464 12.8428 9.83464 12.666V10.666H7.83464C7.65782 10.666 7.48826 10.5958 7.36323 10.4708C7.23821 10.3457 7.16797 10.1762 7.16797 9.99935C7.16797 9.82254 7.23821 9.65297 7.36323 9.52794C7.48826 9.40292 7.65782 9.33268 7.83464 9.33268H9.83464V7.33268C9.83464 7.15587 9.90487 6.9863 10.0299 6.86128C10.1549 6.73625 10.3245 6.66602 10.5013 6.66602Z"
                fill="#14151A"
              />
            </svg>

            <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M9.99963 1.5C11.3392 1.50117 12.6565 1.84354 13.8271 2.49483C14.9977 3.14611 15.9832 4.08485 16.6905 5.2225L16.8505 5.48C17.6019 6.6862 18.0002 8.07887 18.0002 9.5C18.0002 10.9211 17.6019 12.3138 16.8505 13.52L16.6905 13.7775C15.9832 14.9152 14.9978 15.854 13.8271 16.5053C12.6565 17.1566 11.3392 17.4989 9.99963 17.5C8.66018 17.4986 7.34315 17.1561 6.1727 16.5049C5.00224 15.8536 4.01693 14.915 3.30963 13.7775L3.14963 13.52C2.39827 12.3138 2 10.9211 2 9.5C2 8.07889 2.39827 6.68623 3.14963 5.48L3.30963 5.2225C4.01687 4.08497 5.00217 3.14631 6.17264 2.49503C7.34311 1.84375 8.66017 1.50131 9.99963 1.5ZM9.99963 2.7975C8.87889 2.79876 7.77693 3.08538 6.79762 3.63037C5.81831 4.17535 4.99391 4.96074 4.40213 5.9125L4.24213 6.16917C3.6195 7.16858 3.28946 8.3225 3.28946 9.5C3.28946 10.6775 3.6195 11.8314 4.24213 12.8308L4.40213 13.0883C4.99409 14.0401 5.81866 14.8254 6.79813 15.3702C7.77759 15.915 8.87966 16.2015 10.0005 16.2025C11.1213 16.2014 12.2235 15.9148 13.2029 15.3698C14.1824 14.8248 15.0069 14.0394 15.5988 13.0875L15.7588 12.8308C16.3815 11.8315 16.7116 10.6775 16.7116 9.5C16.7116 8.32248 16.3815 7.16855 15.7588 6.16917L15.5988 5.9125C15.0069 4.9605 14.1822 4.17496 13.2026 3.62996C12.2229 3.08497 11.1207 2.79847 9.99963 2.7975ZM12.8021 10.1225C13.158 10.1225 13.4463 10.4133 13.4463 10.7717C13.4467 10.9324 13.3873 11.0876 13.2796 11.2069C13.172 11.3263 13.0237 11.4014 12.8638 11.4175L12.8021 11.42H8.14713L8.8763 12.6117C8.96075 12.7491 8.99115 12.913 8.96158 13.0716C8.93202 13.2302 8.84461 13.3722 8.7163 13.47L8.66546 13.505C8.52902 13.5898 8.36575 13.6203 8.20792 13.5905C8.05008 13.5607 7.90915 13.4728 7.81296 13.3442L7.77796 13.2917L6.44296 11.1117C6.3853 11.0175 6.35257 10.9102 6.34787 10.7999C6.34317 10.6896 6.36665 10.5799 6.4161 10.4811C6.46555 10.3824 6.53933 10.2979 6.63049 10.2356C6.72165 10.1733 6.82718 10.1352 6.93713 10.125L6.99213 10.1233L12.8021 10.1225ZM11.9805 6.08083L12.0155 6.13333L13.3505 8.31333C13.4081 8.4075 13.4409 8.5148 13.4456 8.62512C13.4503 8.73544 13.4268 8.84514 13.3773 8.94387C13.3279 9.0426 13.2541 9.1271 13.1629 9.18941C13.0718 9.25172 12.9662 9.28978 12.8563 9.3L12.8013 9.3025H6.9913C6.90638 9.30217 6.82235 9.28512 6.74402 9.25232C6.66569 9.21952 6.59458 9.17161 6.53477 9.11133C6.47495 9.05105 6.42759 8.97958 6.3954 8.90099C6.3632 8.82241 6.3468 8.73825 6.34713 8.65333C6.34713 8.31667 6.60213 8.04 6.92963 8.00833L6.9913 8.005H11.6463L10.9171 6.81333C10.8327 6.67588 10.8023 6.51195 10.8318 6.35336C10.8614 6.19476 10.9488 6.05279 11.0771 5.955L11.128 5.92083C11.2643 5.83599 11.4275 5.80535 11.5853 5.83498C11.7432 5.8646 11.8842 5.95232 11.9805 6.08083Z"
                fill="#14151A"
              />
            </svg>

            <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M10.668 1.875C9.061 1.875 7.49011 2.35152 6.15396 3.24431C4.81781 4.1371 3.77641 5.40605 3.16145 6.8907C2.54649 8.37535 2.38559 10.009 2.69909 11.5851C3.0126 13.1612 3.78643 14.6089 4.92273 15.7452C6.05903 16.8815 7.50677 17.6554 9.08286 17.9689C10.659 18.2824 12.2926 18.1215 13.7773 17.5065C15.2619 16.8916 16.5309 15.8502 17.4237 14.514C18.3165 13.1779 18.793 11.607 18.793 10C18.7908 7.84579 17.934 5.78045 16.4108 4.25719C14.8875 2.73394 12.8222 1.87721 10.668 1.875ZM10.668 16.875C9.30823 16.875 7.97901 16.4718 6.84843 15.7164C5.71784 14.9609 4.83665 13.8872 4.3163 12.6309C3.79595 11.3747 3.6598 9.99237 3.92507 8.65875C4.19035 7.32513 4.84513 6.10013 5.80661 5.13864C6.7681 4.17715 7.99311 3.52237 9.32673 3.2571C10.6603 2.99183 12.0427 3.12798 13.2989 3.64833C14.5552 4.16868 15.6289 5.04987 16.3843 6.18045C17.1398 7.31104 17.543 8.64025 17.543 10C17.5408 11.8227 16.8157 13.5701 15.5269 14.8589C14.2381 16.1478 12.4907 16.8728 10.668 16.875ZM13.6096 10.1833C13.6679 10.2412 13.7141 10.31 13.7457 10.3858C13.7772 10.4616 13.7935 10.5429 13.7935 10.625C13.7935 10.7071 13.7772 10.7884 13.7457 10.8642C13.7141 10.94 13.6679 11.0088 13.6096 11.0667L11.1096 13.5667C11.0518 13.625 10.9829 13.6714 10.907 13.703C10.8311 13.7346 10.7498 13.7509 10.6676 13.7509C10.5854 13.7509 10.504 13.7346 10.4281 13.703C10.3522 13.6714 10.2833 13.625 10.2255 13.5667L7.72547 11.0667C7.66407 11.0094 7.61482 10.9404 7.58066 10.8638C7.54649 10.7871 7.52813 10.7044 7.52665 10.6204C7.52517 10.5365 7.5406 10.4532 7.57204 10.3753C7.60347 10.2975 7.65026 10.2268 7.70961 10.1675C7.76896 10.1081 7.83965 10.0613 7.91747 10.0299C7.9953 9.99846 8.07866 9.98303 8.16257 9.98451C8.24649 9.98599 8.32926 10.0044 8.40592 10.0385C8.48259 10.0727 8.55159 10.1219 8.60881 10.1833L10.0421 11.6167V6.875C10.0421 6.79292 10.0583 6.71165 10.0897 6.63582C10.1211 6.55999 10.1672 6.49109 10.2252 6.43306C10.2832 6.37502 10.3521 6.32898 10.428 6.29757C10.5038 6.26617 10.5851 6.25 10.6671 6.25C10.7492 6.25 10.8305 6.26617 10.9063 6.29757C10.9821 6.32898 11.051 6.37502 11.1091 6.43306C11.1671 6.49109 11.2132 6.55999 11.2446 6.63582C11.276 6.71165 11.2921 6.79292 11.2921 6.875V11.6167L12.7255 10.1833C12.8427 10.0663 13.0015 10.0005 13.1671 10.0005C13.3328 10.0005 13.4925 10.0663 13.6096 10.1833Z"
                fill="#14151A"
              />
            </svg>
          </div>
        </div>

        {/* Price Input */}
        <div className="mb-3">
          <div className="flex items-center p-3 rounded-2xl bg-gray-50 h-[46px]">
            <span className="mr-2 text-xs text-gray-500">Price</span>
            <input type="text" value="67009.62" className="flex-1 text-xs text-right bg-transparent outline-none" />
            <span className="ml-2 text-xs font-semibold">USDT</span>
            <div className="flex flex-col gap-1 ml-2 border-l">
              <button className="px-3 border-b">+</button>
              <button className="px-3">âˆ’</button>
            </div>
          </div>
        </div>

        {/* Quantity Input */}
        <div className="mb-3">
          <div className="flex items-center p-3 rounded-2xl bg-gray-50 h-[46px]">
            <span className="mr-2 text-xs text-gray-500">Quantity</span>
            <input type="text" placeholder="" className="flex-1 text-right bg-transparent outline-none" />
            <span className="ml-2 text-xs font-semibold">BTC</span>
          </div>
        </div>

        {/* Percentage Selector */}

        <div className="relative h-1 mb-4 bg-gray-200 rounded">
          <div className="absolute h-1 bg-gray-300 rounded" style={{ width: `${selectedPercentage}%` }} />
          <div
            className="absolute w-4 h-4 bg-white border-2 border-gray-300 rounded-full -top-1.5"
            style={{ left: `calc(${selectedPercentage}% - 8px)` }}
          />
        </div>
        <div className="flex justify-between px-2 mb-4">
          {percentages.map((percent) => (
            <button
              key={percent}
              onClick={() => setSelectedPercentage(percent)}
              className={`text-sm ${selectedPercentage === percent ? "text-black" : "text-gray-500"} text-xs`}
            >
              {percent}%
            </button>
          ))}
        </div>

        {/* Total */}
        <div className="mb-3">
          <div className="flex items-center p-3 rounded-2xl bg-gray-50 h-[46px]">
            <span className="mr-2 text-xs text-gray-500">Total</span>
            <input type="text" placeholder="" className="flex-1 text-right bg-transparent outline-none" />
            <span className="ml-2 text-xs font-semibold">USDT</span>
          </div>
        </div>

        {/* Time in Force */}
        <div className="flex items-center mb-6 gap-x-[6px]">
          <div className="flex items-center text-xs text-gray-500">
            <span>Time in force</span>
          </div>
          <button className="flex items-center text-xs text-gray-700">
            <span className="mr-[6px]">GTC</span>
            <svg width="6" height="4" viewBox="0 0 6 4" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M4.78492 0.570312C5.37825 0.570312 5.67625 1.28831 5.25625 1.70831L3.06092 3.90365L0.865585 1.70831C0.445585 1.28831 0.742919 0.570312 1.33692 0.570312H4.78492Z"
                fill="#14151A"
              />
            </svg>
          </button>
        </div>
      </div>

      {/* Login Button */}
      <TextButton title="Log in" className="w-full px-10 py-2 mt-3 h-8 text-sm text-white bg-black rounded-[10px]" />
    </div>
  );
};

export default TradingForm;
